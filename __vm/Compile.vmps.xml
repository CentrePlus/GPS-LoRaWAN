<VisualMicro>
  <Program Name="GPS_LoRaWAN" Ext=".ino" Location="C:\Users\Mark Mortimer\Documents\Arduino\GPS_LoRaWAN">
    <Compile ReCompileIfSourceIsNewer="1" IsDebugStart="1" IsGdb="0" CompilerErrors="0" ConfigurationName="Debug" UseConfigurationNameInBuildFolder="True" StopOnError="False" OptimiseLibs="True" OptimiseCore="True" BuildPath="C:\Users\Mark Mortimer\AppData\Local\Temp\VMBuilds\GPS_LoRaWAN\adafruit_adafruit_feather_m0\Debug" SketchName="GPS_LoRaWAN" ReportDigitalPins="0" ReportAnalogPins="0" ReportI2C="0" ReportFreeMemory="0" IncludeDebug="1" LastDebugPreProcessorDefinitions="VM_DEBUGGER_TYPE_HARDWARESERIAL 0;VM_DEBUGGER_TYPE_SOFTWARESERIAL 1;VM_DEBUGGER_TYPE_FASTSERIAL 2;VM_DEBUGGER_TYPE_USB 3;VM_DEBUGGER_TYPE_TEENSY 4;VM_DEBUGGER_TYPE_UART 5;VM_DEBUGGER_TYPE_USART 6;VM_DEBUGGER_TYPE_USBSERIAL 7;VM_DEBUGGER_TYPE_TTYUART 8;VM_DEBUGGER_TYPE_NET_CONSOLE 9;VM_DEBUGGER_TYPE_Uart 10;VM_DEBUGGER_TYPE_COSA 11;VM_DEBUGGER_TYPE_CDCSerialClass 12;VM_DEBUGGER_TYPE_HARDWARESERIAL1 13;VM_DEBUGGER_TYPE_HARDWARESERIAL2 14;VM_DEBUGGER_TYPE_HARDWARESERIAL3 15;VM_DEBUGGER_TYPE_NET_UDP 16;VM_DEBUGGER_TYPE_USBAPI 17;VM_DEBUGGER_TYPE_SERIALUSB 18;VM_DEBUGGER_TYPE_MS430_SERIAL_ 19;VM_DEBUGGER_TYPE_NO_SERIAL 20;VM_DEBUGGER_TYPE_GENERIC_OBJECT 21;VM_DEBUG_ENABLE 1;VM_DEBUG;VM_DEBUG_BANDWIDTH_THROTTLE_MS 100;VM_DEBUGGER_SOFT_TRANSPORT Serial;VM_DEBUGGER_SOFT_TRANSPORT_WRITER Serial;VM_DEBUGGER_TYPE VM_DEBUGGER_TYPE_GENERIC_OBJECT;VM_DEBUG_BREAKPAUSE;" IncludesDebug="1" IsCompiled="1" />
    <Platform Name="arduino16x" Package="adafruit" Platform="samd" Architecture="7-2017q4">
      <Board Name="adafruit_adafruit_feather_m0" Description="Adafruit Feather M0" CoreFolder="C:\Users\Mark Mortimer\AppData\Local\arduino15\packages\adafruit\hardware\samd\1.5.11\cores\arduino" VariantFullPath="C:\Users\Mark Mortimer\AppData\Local\arduino15\packages\adafruit\hardware\samd\1.5.11\variants\feather_m0" McuIdePath="C:\Program Files (x86)\Arduino" McuSketchBookPath="C:\Users\Mark Mortimer\Documents\Arduino" name="Adafruit Feather M0" vid.0="0x239A" pid.0="0x800B" vid.1="0x239A" pid.1="0x000B" vid.2="0x239A" pid.2="0x0015" upload.tool="bossac" upload.protocol="sam-ba" upload.maximum_size="262144" upload.offset="0x2000" upload.use_1200bps_touch="true" upload.wait_for_upload_port="true" upload.native_usb="true" build.mcu="cortex-m0plus" build.f_cpu="48000000L" build.usb_product="&quot;Feather M0&quot;" build.usb_manufacturer="&quot;Adafruit&quot;" build.board="SAMD_ZERO" build.core="arduino" build.extra_flags="-DARDUINO_SAMD_ZERO -DARM_MATH_CM0PLUS -DADAFRUIT_FEATHER_M0 -D__SAMD21G18A__ {build.usb_flags}" build.ldscript="linker_scripts/gcc/flash_with_bootloader.ld" build.openocdscript="openocd_scripts/feather_m0.cfg" build.variant="feather_m0" build.variant_system_lib="" build.vid="0x239A" build.pid="0x800B" bootloader.tool="openocd" bootloader.file="featherM0/bootloader-feather_m0-v2.0.0-adafruit.5.bin" menu.usbstack.arduino="Arduino" menu.usbstack.tinyusb="TinyUSB" menu.usbstack.tinyusb.build.flags.usbstack="-DUSE_TINYUSB" menu.debug.off="Off" menu.debug.on="On" menu.debug.on.build.flags.debug="-g" runtime.ide.path="C:\Program Files (x86)\Arduino" runtime.os="windows" build.system.path="C:\Users\Mark Mortimer\AppData\Local\arduino15\packages\adafruit\hardware\samd\1.5.11\system" runtime.ide.version="108012" target_package="adafruit" target_platform="samd" runtime.hardware.path="C:\Users\Mark Mortimer\AppData\Local\arduino15\packages\adafruit\hardware\samd" originalid="adafruit_feather_m0" intellisense.tools.path="{runtime.tools.arm-none-eabi-gcc.path}" intellisense.include.paths="{intellisense.tools.path}\arm-none-eabi\include\c++\4.8.3;{intellisense.tools.path}\arm-none-eabi\include\c++\4.8.3\arm-none-eabi;{intellisense.tools.path}\arm-none-eabi\include\c++\4.8.3\bits;{intellisense.tools.path}\arm-none-eabi\include;{intellisense.tools.path}\arm-none-eabi\include\sys;{build.system.path};{runtime.hardware.path}/avr;{runtime.hardware.path}/usb;{intellisense.tools.path}\lib\gcc\arm-none-eabi\4.8.3\include;{runtime.tools.CMSIS.path}\Device\ATMEL\samd21\include\component;{runtime.tools.CMSIS.path}..\..\CMSIS-Atmel\1.2.0\CMSIS\Device\ATMEL\samd21\include\component;{runtime.tools.CMSIS.path}..\..\CMSIS-Atmel\1.2.0\CMSIS\Device\ATMEL\samd21\include\instance;{runtime.tools.CMSIS.path}..\..\CMSIS-Atmel\1.1.0\CMSIS\Device\ATMEL\samd21\include\pio;{runtime.tools.CMSIS.path}..\..\CMSIS-Atmel\1.2.0\CMSIS\Device\ATMEL\samd21\include\component;{runtime.tools.CMSIS.path};{runtime.tools.CMSIS.path}\Device\ATMEL\samd21\include;{runtime.tools.CMSIS.path}\CMSIS\include;{runtime.tools.CMSIS.path}\Device\ATMEL\samd21\include\component;{runtime.tools.CMSIS.path}\Device\ATMEL\samd21\include\instance;{runtime.tools.CMSIS.path}\Device\ATMEL\samd21\include\pio;{runtime.tools.CMSIS.path}\Device\ATMEL\samd21\include\component;{runtime.tools.CMSIS.path}..\..\CMSIS-Atmel\1.1.0\CMSIS\Device\ATMEL\samd21\include\component;{runtime.tools.CMSIS.path}..\..\CMSIS-Atmel\1.1.0\CMSIS\Device\ATMEL\samd21\include\instance;{runtime.tools.CMSIS.path}..\..\CMSIS-Atmel\1.1.0\CMSIS\Device\ATMEL\samd21\include\pio;{runtime.tools.CMSIS.path}..\..\CMSIS-Atmel\1.1.0\CMSIS\Device\ATMEL\samd21\include\component;" tools.atprogram.cmd.path="%AVRSTUDIO_EXE_PATH%\atbackend\atprogram" tools.atprogram.cmd.setwinpath="true" tools.atprogram.program.params.verbose="-v" tools.atprogram.program.params.quiet="-q" tools.atprogram.program.pattern="&quot;{cmd.path}&quot; -d {build.mcu} {program.verbose} {program.extra_params} program -c -f &quot;{build.path}\{build.project_name}.hex&quot;" tools.atprogram.program.xpattern="&quot;{cmd.path}&quot; {AVRSTUDIO_BACKEND_CONNECTION} -d {build.mcu} {program.verbose} {program.extra_params} program -c -f &quot;{build.path}\{build.project_name}.hex&quot;" tools.openocd.debug.cmd="bin/openocd.exe" tools.openocd.debug.cmd.windows="bin/openocd.exe" tools.openocd.debug.params.verbose="-d2" tools.openocd.debug.params.quiet="-d0" tools.openocd.debug.args="{debug.verbose} -l &quot;{{build.path}/{build.project_name}_DebugOpenOCD.log}&quot; -s &quot;{path}/share/openocd/scripts/&quot; -f &quot;{runtime.platform.path}/variants/{build.variant}/{build.openocdscript}&quot; -c &quot;init&quot;" tools.openocd.debug.address="localhost:3333" tools.openocd.debug.pattern="&quot;{path}/{cmd}&quot; {args}" tools.gdb1.name="Open OCD + GDB" tools.gdb1.cmd="arm-none-eabi-gdb.exe" tools.gdb1.path="{runtime.tools.arm-none-eabi-gcc.path}/bin" tools.gdb1.server="openocd" tools.gdb1.args="-interpreter=mi -d &quot;{build.project_path}&quot;" tools.gdb1.pattern="&quot;{path}/{cmd}&quot; {args}" tools.atmelICE.openocd.path="{runtime.tools.openocd-0.10.0.1.path}" tools.atmelICE.cmd="arm-none-eabi-gdb.exe" tools.atmelICE.path="{runtime.tools.arm-none-eabi-gcc.path}/bin" tools.atmelICE.pattern="&quot;{path}/{cmd}&quot;" tools.atmelICE.server.tool="openocd" tools.atmelICE.server.args="{params.verbose} -l &quot;{{build.path}/{build.project_name}_DebugOpenOCD.log}&quot; -s&quot;{path}/scripts/&quot; -c &quot;interface cmsis-dap&quot; -c &quot;cmsis_dap_vid_pid 0x03eb 0x2141&quot; -c &quot;transport select swd&quot; -f &quot;{runtime.platform.path}/variants/{build.variant}/{build.openocdscript}&quot; -c &quot;init&quot;" tools.bmp_upload.cmd="arm-none-eabi-gdb.exe" tools.bmp_upload.path="{runtime.tools.arm-none-eabi-gcc.path}/bin/" tools.bmp_upload.debug.args="-nh -b 115200 -ex &quot;target extended-remote \\.\{serial.port}&quot; -ex &quot;monitor swdp_scan&quot; -ex &quot;attach 1&quot;" tools.jlink.server.build.openocddebugger="jlink.cfg" tools.jlink.openocd.path="{runtime.tools.openocd-0.10.0.1.path}" tools.jlink.cmd="arm-none-eabi-gdb.exe" tools.jlink.path="{runtime.tools.arm-none-eabi-gcc.path}/bin" tools.jlink.pattern="&quot;{path}/{cmd}&quot;" tools.jlink.server.tool="openocd" tools.jlink.server.args="{params.verbose} -l &quot;{{build.path}/{build.project_name}_DebugOpenOCD.log}&quot; -s&quot;{path}/scripts/&quot; -f &quot;{path}/scripts/interface/{build.openocddebugger}&quot; -c &quot;transport select swd&quot; -f &quot;{runtime.platform.path}/variants/{build.variant}/{build.openocdscript}&quot; -c &quot;init&quot;" tools.stlinkv2.server.build.openocddebugger="stlink-v2.cfg" tools.stlinkv2.openocd.path="{runtime.tools.openocd-0.10.0.1.path}" tools.stlinkv2.cmd="arm-none-eabi-gdb.exe" tools.stlinkv2.path="{runtime.tools.arm-none-eabi-gcc.path}/bin" tools.stlinkv2.pattern="&quot;{path}/{cmd}&quot;" tools.stlinkv2.server.tool="openocd" tools.stlinkv2.server.args="{params.verbose} -l &quot;{{build.path}/{build.project_name}_DebugOpenOCD.log}&quot; -s&quot;{path}/scripts/&quot; -f &quot;{path}/scripts/interface/{build.openocddebugger}&quot; -c &quot;set CPUTAPID 0x0bc11477&quot; -f &quot;{runtime.platform.path}/variants/{build.variant}/{build.openocdscript}&quot; -c &quot;init&quot;" debug_menu.debugger_type.hwdebugger="Hardware" debug_menu.hwdebugger="Debugger" debug_menu.hwdebugger.atmelICE="Atmel ICE" debug_menu.hwdebugger.atmelICE.debug.tool="atmelICE" meta_atmelICE.image.connect="https://www.visualmicro.com/pics/Debug-Break-SAMD-AtmelICE-Connections.png" debug_menu.hwdebugger.bmp="Black Magic (SWD)" debug_menu.hwdebugger.bmp.debug.tool="bmp_upload" meta_bmp.sentence="This debugger requires the 20-pin ribbon cable to link to your target, see connections below" meta_bmp.comment="Ensure the COM Port for the Black Magic is selected before attaching the Debugger. . Set vMicro &gt; Debugger &gt; 'Compiler Optimization' to 'No Project', 'No Project + Libraries' or 'None' when debugging. (NOTE: Changing the optimization setting for this platform might cause compilation errors with certain code such as HardwareSerial.)" meta_bmp.image.connect="https://www.visualmicro.com/pics/Debug-Help-SAMD-BMP-Connections.png" meta_bmp.image.operation="https://www.visualmicro.com/pics/Debug-Break-SAMD-BMP-VSOnly.png" meta_bmp.reference.usage.url="https://www.visualmicro.com/page/User-Guide.aspx?doc=Arduino-gdb-Tutorial.html" debug_menu.hwdebugger.builtin="Built In (EDBG)" debug_menu.hwdebugger.builtin.debug.tool="gdb1" meta_gdb1.sentence="This debugger requires the secondary 'debug' port to be attached via USB to your PC" meta_gdb1.comment="Ensure the (Debug) variant of the board is selected, and the 'debug' COM Port is selected. . Set vMicro &gt; Debugger &gt; 'Compiler Optimization' to 'No Project', 'No Project + Libraries' or 'None' when debugging. (NOTE: Changing the optimization setting for this platform might cause compilation errors with certain code such as HardwareSerial.)" meta_gdb1.image.operation="https://www.visualmicro.com/pics/Debug-Break-SAMD-EDBG-VSOnly.png" debug_menu.hwdebugger.jlink="Segger JLink (SWD)" debug_menu.hwdebugger.jlink.debug.tool="jlink" meta_jlink.sentence="This debugger will require some wiring to connect it to your target SAMD board" meta_jlink.comment="Wiring can be found in the below image, and the 'https://zadig.akeo.ie/' tool is required to replace the USB Driver on Interface 0 with 'WinUSB'. Set vMicro &gt; Debugger &gt; 'Compiler Optimization' to 'No Project', 'No Project + Libraries' or 'None' when debugging. (NOTE: Changing the optimization setting for this platform might cause compilation errors with certain code such as HardwareSerial.)" meta_jlink.image.connect="https://www.visualmicro.com/pics/Debug-Help-SAMD-Jlink-Connections.png" meta_jlink.image.operation="https://www.visualmicro.com/pics/Debug-Break-SAMD-Jlink-VSOnly.png" meta_jlink.reference.usage.url="https://www.visualmicro.com/page/User-Guide.aspx?doc=Arduino-gdb-Tutorial.html" debug_menu.hwdebugger.stlinkv2="STLINKv2" debug_menu.hwdebugger.stlinkv2.debug.tool="stlinkv2" meta_stlinkv2.sentence="This debugger requires the 20-pin ribbon cable to link to your target." meta_stlinkv2.comment="Wiring can be found in the below image, and the 'https://zadig.akeo.ie/' tool is required to replace the USB Driver on Interface 0 with 'WinUSB'. Set vMicro &gt; Debugger &gt; 'Compiler Optimization' to 'No Project', 'No Project + Libraries' or 'None' when debugging. (NOTE: Changing the optimization setting for this platform might cause compilation errors with certain code such as HardwareSerial.)" meta_stlinkv2.image.connect="https://www.visualmicro.com/pics/Debug-Break-SAMD-STLinkv2-VSOnly.png" meta_stlinkv2.reference.usage.url="https://www.visualmicro.com/page/User-Guide.aspx?doc=Arduino-gdb-Tutorial.html" tools.vmopenocd.path="{runtime.tools.openocd-0.10.0.1.path}" tools.vmopenocd.cmd="bin/openocd.exe" tools.vmopenocd.cmd.windows="bin/openocd.exe" tools.vmopenocd.params.verbose="-d2" tools.vmopenocd.params.quiet="-d0" tools.vmopenocd.program.elf.message="****[vMicro]**** Uploading ELF :" tools.vmopenocd.program.pattern="&quot;{program.path}/{program.cmd}&quot; {program.verbose} -s &quot;{program.path}/share/openocd/scripts/&quot; -f &quot;{runtime.platform.path}/variants/{build.variant}/{build.openocdscript}&quot; -c &quot;echo -n {****[vMicro]**** Uploading App :}&quot; -c &quot;reset_config; telnet_port disabled; program {{{build.path}/{build.project_name}.elf}} reset;reset_config; shutdown&quot;" tools.vmopenocd.program.extra_params="" tools.vmopenocd.program.protocol="" tools.vmopenocd.protocol="" tools.vmopenocd.program.params.verify="verify" tools.vmopenocd.program.params.noverify="" tools.vmopenocd.erase.params.verbose="-d3" tools.vmopenocd.erase.params.quiet="-d0" tools.vmopenocd.erase.pattern="" tools.vmopenocd.bootloader.bin.message="****[vMicro]**** Uploading ELF :" tools.vmbmp.program.cmd="bin/arm-none-eabi-gdb.exe" tools.vmbmp.program.cmd.windows="bin/arm-none-eabi-gdb.exe" tools.vmbmp.program.path="{runtime.tools.arm-none-eabi-gcc.path}" tools.vmbmp.program.pattern="{program.path}/{program.cmd} -nx -b 230400 -batch -ex &quot;set confirm off&quot; -ex &quot;target extended-remote \\.\{serial.port}&quot; -ex &quot;monitor swdp_scan&quot; -ex &quot;attach 1&quot; -ex &quot;load&quot; -ex &quot;compare-sections&quot; -ex &quot;kill&quot; &quot;{build.path}/{build.project_name}.elf&quot; -ex &quot;kill&quot;" version="1.5.11" compiler.warning_flags="-w" compiler.warning_flags.none="-w" compiler.warning_flags.default="" compiler.warning_flags.more="-Wall -Wno-expansion-to-defined" compiler.warning_flags.all="-Wall -Wextra -Wno-expansion-to-defined" compiler.path="{runtime.tools.arm-none-eabi-gcc-7-2017q4.path}/bin/" compiler.c.cmd="arm-none-eabi-gcc" compiler.c.flags="-mcpu={build.mcu} -mthumb -c -g -Os {compiler.warning_flags} -std=gnu11 -ffunction-sections -fdata-sections -nostdlib --param max-inline-insns-single=500 -MMD -D__SKETCH_NAME__=&quot;&quot;&quot;{build.project_name}&quot;&quot;&quot;" compiler.c.elf.cmd="arm-none-eabi-g++" compiler.c.elf.flags="-Os -Wl,--gc-sections -save-temps" compiler.S.cmd="arm-none-eabi-gcc" compiler.S.flags="-c -g -x assembler-with-cpp -MMD" compiler.cpp.cmd="arm-none-eabi-g++" compiler.cpp.flags="-mcpu={build.mcu} -mthumb -c -g -Os {compiler.warning_flags} -std=gnu++11 -ffunction-sections -fdata-sections -fno-threadsafe-statics -nostdlib --param max-inline-insns-single=500 -fno-rtti -fno-exceptions -MMD -D__SKETCH_NAME__=&quot;&quot;&quot;{build.project_name}&quot;&quot;&quot;" compiler.ar.cmd="arm-none-eabi-ar" compiler.ar.flags="rcs" compiler.objcopy.cmd="arm-none-eabi-objcopy" compiler.objcopy.eep.flags="-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0" compiler.elf2hex.bin.flags="-O binary" compiler.elf2hex.hex.flags="-O ihex -R .eeprom" compiler.elf2hex.cmd="arm-none-eabi-objcopy" compiler.ldflags="-mcpu={build.mcu} -mthumb -Wl,--cref -Wl,--check-sections -Wl,--gc-sections -Wl,--unresolved-symbols=report-all -Wl,--warn-common -Wl,--warn-section-align" compiler.size.cmd="arm-none-eabi-size" compiler.define="-DARDUINO=" compiler.readelf.cmd="arm-none-eabi-readelf" build.cache_flags="" build.flags.optimize="" build.flags.maxspi="" build.flags.maxqspi="" build.flags.usbstack="" build.flags.debug="" compiler.c.extra_flags="" compiler.c.elf.extra_flags="" compiler.cpp.extra_flags="" compiler.S.extra_flags="" compiler.ar.extra_flags="" compiler.elf2hex.extra_flags="" compiler.arm.cmsis.c.flags="&quot;-I{runtime.tools.CMSIS-4.5.0.path}/CMSIS/Include/&quot; &quot;-I{runtime.tools.CMSIS-Atmel-1.2.0.path}/CMSIS/Device/ATMEL/&quot;" compiler.arm.cmsis.ldflags="&quot;-L{runtime.tools.CMSIS-4.5.0.path}/CMSIS/Lib/GCC/&quot; -larm_cortexM0l_math" compiler.libraries.ldflags="" build.usb_flags="-DUSB_VID={build.vid} -DUSB_PID={build.pid} -DUSBCON -DUSB_CONFIG_POWER={build.usb_power} '-DUSB_MANUFACTURER={build.usb_manufacturer}' '-DUSB_PRODUCT={build.usb_product}' {build.flags.usbstack} {build.flags.debug} &quot;-I{build.core.path}/TinyUSB&quot; &quot;-I{build.core.path}/TinyUSB/Adafruit_TinyUSB_ArduinoCore&quot; &quot;-I{build.core.path}/TinyUSB/Adafruit_TinyUSB_ArduinoCore/tinyusb/src&quot;" build.usb_power="100" recipe.c.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.c.flags} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.c.extra_flags} {build.extra_flags} {build.cache_flags}  {build.flags.debug} {build.flags.optimize} {build.flags.maxspi} {build.flags.maxqspi} {compiler.arm.cmsis.c.flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.cpp.o.pattern="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {build.cache_flags} {build.flags.debug} {build.flags.optimize} {build.flags.maxspi} {build.flags.maxqspi} {build.extra_flags} {compiler.arm.cmsis.c.flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.S.o.pattern="&quot;{compiler.path}{compiler.S.cmd}&quot; {compiler.S.flags} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.S.extra_flags} {build.extra_flags} {build.cache_flags} {compiler.arm.cmsis.c.flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" archive_file_path="{build.path}/{archive_file}" recipe.ar.pattern="&quot;{compiler.path}{compiler.ar.cmd}&quot; {compiler.ar.flags} {compiler.ar.extra_flags} &quot;{archive_file_path}&quot; &quot;{object_file}&quot;" recipe.c.combine.pattern="&quot;{compiler.path}{compiler.c.elf.cmd}&quot;  &quot;-L{build.path}&quot; {compiler.c.elf.flags} {compiler.c.elf.extra_flags} &quot;-T{build.variant.path}/{build.ldscript}&quot; &quot;-Wl,-Map,{build.path}/{build.project_name}.map&quot; --specs=nano.specs --specs=nosys.specs {compiler.ldflags} -o &quot;{build.path}/{build.project_name}.elf&quot; {object_files} {compiler.libraries.ldflags} -Wl,--start-group {compiler.arm.cmsis.ldflags} &quot;-L{build.variant.path}&quot; -lm &quot;{build.path}/{archive_file}&quot; -Wl,--end-group" recipe.objcopy.bin.pattern="&quot;{compiler.path}{compiler.elf2hex.cmd}&quot; {compiler.elf2hex.bin.flags} {compiler.elf2hex.extra_flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.bin&quot;" recipe.objcopy.hex.pattern="&quot;{compiler.path}{compiler.elf2hex.cmd}&quot; {compiler.elf2hex.hex.flags} {compiler.elf2hex.extra_flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.hex&quot;" build.preferred_out_format="bin" recipe.output.tmp_file="{build.project_name}.{build.preferred_out_format}" recipe.output.save_file="{build.project_name}.{build.variant}.{build.preferred_out_format}" recipe.size.pattern="&quot;{compiler.path}{compiler.size.cmd}&quot; -A &quot;{build.path}/{build.project_name}.elf&quot;" recipe.size.regex="\.text\s+([0-9]+).*" tools.bossac.path="{runtime.tools.bossac-1.7.0-arduino3.path}" tools.bossac.cmd="bossac.exe" tools.bossac.cmd.windows="bossac.exe" tools.bossac.upload.params.verbose="-i -d" tools.bossac.upload.params.quiet="" tools.bossac.upload.pattern="&quot;{path}/{cmd}&quot; {upload.verbose} --port={serial.port.file} -U {upload.native_usb} -i -e -w -v &quot;{build.path}/{build.project_name}.bin&quot; -R" tools.bossac_remote.upload.pattern="/usr/bin/run-bossac {upload.verbose} --port=ttyATH0 -U {upload.native_usb} -e -w -v /tmp/sketch.bin -R" tools.bossac.network_cmd="{runtime.tools.arduinoOTA.path}/bin/arduinoOTA" tools.bossac.upload.network_pattern="&quot;{network_cmd}&quot; -address {serial.port} -port 65280 -username arduino -password &quot;{network.password}&quot; -sketch &quot;{build.path}/{build.project_name}.bin&quot; -upload /sketch -b" tools.bossac18.path="{runtime.tools.bossac-1.8.0-48-gb176eee.path}" tools.bossac18.cmd="bossac" tools.bossac18.upload.params.verbose="-i -d" tools.bossac18.upload.params.quiet="" tools.bossac18.upload.pattern="&quot;{path}/{cmd}&quot; {upload.verbose} --port={serial.port.file} -U -i --offset={upload.offset} -w -v &quot;{build.path}/{build.project_name}.bin&quot; -R" tools.bossac18.network_cmd="{runtime.tools.arduinoOTA.path}/bin/arduinoOTA" tools.bossac18.upload.network_pattern="&quot;{network_cmd}&quot; -address {serial.port} -port 65280 -username arduino -password &quot;{network.password}&quot; -sketch &quot;{build.path}/{build.project_name}.bin&quot; -upload /sketch -b" tools.bossacI.path="{runtime.tools.bossac-1.7.0-arduino3.path}" tools.bossacI.cmd="bossac.exe" tools.bossacI.cmd.windows="bossac.exe" tools.bossacI.upload.params.verbose="-i -d" tools.bossacI.upload.params.quiet="" tools.bossacI.upload.pattern="&quot;{path}/{cmd}&quot; {upload.verbose} --port={serial.port.file} -I -U {upload.native_usb} -i -e -w &quot;{build.path}/{build.project_name}.bin&quot; -R" tools.bossacI_remote.upload.pattern="/usr/bin/run-bossac {upload.verbose} --port=ttyATH0 -U {upload.native_usb} -e -w -v /tmp/sketch.bin -R" tools.bossacI.network_cmd="{runtime.tools.arduinoOTA.path}/bin/arduinoOTA" tools.bossacI.upload.network_pattern="&quot;{network_cmd}&quot; -address {serial.port} -port 65280 -username arduino -password &quot;{network.password}&quot; -sketch &quot;{build.path}/{build.project_name}.bin&quot; -upload /sketch -b" tools.openocd.path="{runtime.tools.openocd-0.10.0-arduino7.path}" tools.openocd.cmd="bin/openocd.exe" tools.openocd.cmd.windows="bin/openocd.exe" tools.openocd.upload.params.verbose="-d2" tools.openocd.upload.params.quiet="-d0" tools.openocd.upload.pattern="&quot;{path}/{cmd}&quot; {upload.verbose} -s &quot;{path}/share/openocd/scripts/&quot; -f &quot;{runtime.platform.path}/variants/{build.variant}/{build.openocdscript}&quot; -c &quot;telnet_port disabled; program {{build.path}/{build.project_name}.bin} verify reset 0x2000; shutdown&quot;" tools.openocd.network_cmd="{runtime.tools.arduinoOTA.path}/bin/arduinoOTA" tools.openocd.upload.network_pattern="{network_cmd} -address {serial.port} -port 65280 -username arduino -password &quot;{network.password}&quot; -sketch &quot;{build.path}/{build.project_name}.bin&quot; -upload /sketch -b" tools.openocd.program.params.verbose="-d2" tools.openocd.program.params.quiet="-d0" tools.openocd.program.pattern="&quot;{path}/{cmd}&quot; {program.verbose} -s &quot;{path}/share/openocd/scripts/&quot; -f &quot;{runtime.platform.path}/variants/{build.variant}/{build.openocdscript}&quot; -c &quot;telnet_port disabled; program {{build.path}/{build.project_name}.elf} verify reset; shutdown&quot;" tools.openocd.erase.params.verbose="-d3" tools.openocd.erase.params.quiet="-d0" tools.openocd.erase.pattern="" tools.openocd.bootloader.params.verbose="-d2" tools.openocd.bootloader.params.quiet="-d0" tools.openocd.bootloader.pattern="&quot;{path}/{cmd}&quot; {bootloader.verbose} -s &quot;{path}/share/openocd/scripts/&quot; -f &quot;{runtime.platform.path}/variants/{build.variant}/{build.openocdscript}&quot; -c &quot;telnet_port disabled; init; halt; at91samd bootloader 0; program {{runtime.platform.path}/bootloaders/{bootloader.file}} verify reset; shutdown&quot;" tools.openocd-withbootsize.path="{runtime.tools.openocd-0.10.0-arduino7.path}" tools.openocd-withbootsize.cmd="bin/openocd.exe" tools.openocd-withbootsize.cmd.windows="bin/openocd.exe" tools.openocd-withbootsize.upload.params.verbose="-d2" tools.openocd-withbootsize.upload.params.quiet="-d0" tools.openocd-withbootsize.upload.pattern="&quot;{path}/{cmd}&quot; {upload.verbose} -s &quot;{path}/share/openocd/scripts/&quot; -f &quot;{runtime.platform.path}/variants/{build.variant}/{build.openocdscript}&quot; -c &quot;telnet_port disabled; program {{build.path}/{build.project_name}.bin} verify reset {bootloader.size}; shutdown&quot;" tools.openocd-withbootsize.program.params.verbose="-d2" tools.openocd-withbootsize.program.params.quiet="-d0" tools.openocd-withbootsize.program.pattern="&quot;{path}/{cmd}&quot; {program.verbose} -s &quot;{path}/share/openocd/scripts/&quot; -f &quot;{runtime.platform.path}/variants/{build.variant}/{build.openocdscript}&quot; -c &quot;telnet_port disabled; program {{build.path}/{build.project_name}.elf} verify reset; shutdown&quot;" tools.openocd-withbootsize.erase.params.verbose="-d3" tools.openocd-withbootsize.erase.params.quiet="-d0" tools.openocd-withbootsize.erase.pattern="" tools.openocd-withbootsize.bootloader.params.verbose="-d2" tools.openocd-withbootsize.bootloader.params.quiet="-d0" tools.openocd-withbootsize.bootloader.pattern="&quot;{path}/{cmd}&quot; {bootloader.verbose} -s &quot;{path}/share/openocd/scripts/&quot; -f &quot;{runtime.platform.path}/variants/{build.variant}/{build.openocdscript}&quot; -c &quot;telnet_port disabled; init; halt; at91samd bootloader 0; program {{runtime.platform.path}/bootloaders/{bootloader.file}} verify reset; shutdown&quot;" vm.platform.root.path="c:\program files (x86)\microsoft visual studio\2019\community\common7\ide\extensions\p1hbfuhp.cmm\Micro Platforms\arduino16x" adafruit_jlink.name="J-Link over OpenOCD" adafruit_jlink.communication="USB" adafruit_jlink.protocol="jlink" adafruit_jlink.program.protocol="jlink" adafruit_jlink.program.tool="openocd" adafruit_jlink.program.setup_command="interface jlink; transport select swd; reset_config none separate; set WORKAREASIZE 0;" adafruit_atmel_ice.name="Atmel-ICE over OpenOCD" adafruit_atmel_ice.communication="USB" adafruit_atmel_ice.protocol="cmsis-dap" adafruit_atmel_ice.program.protocol="cmsis-dap" adafruit_atmel_ice.program.tool="openocd" adafruit_atmel_ice.program.setup_command="cmsis_dap_vid_pid 0x03eb 0x2141; transport select swd;" compiler.optimization_flags="-Os" compiler.optimization_flags.release="-Os" compiler.optimization_flags.debug="-Og -g3" tools.avrdude.path="{runtime.tools.avrdude.path}" tools.avrdude.cmd="{path}/bin/avrdude" tools.avrdude.config.path="{path}/etc/avrdude.conf" tools.avrdude.upload.params.verbose="-v -v" tools.avrdude.upload.params.quiet="-q -q" tools.avrdude.upload.params.noverify="-V" tools.avrdude.upload.pattern="&quot;{cmd}&quot; &quot;-C{config.path}&quot; {upload.verbose} -p{build.emu.mcu} -c{upload.protocol} -P{serial.port} -b{upload.speed} &quot;-Uflash:w:{build.path}/{build.project_name}.hex:i&quot;" tools.avrdude_remote.upload.pattern="&quot;openocd --version 2&gt;&amp;1 | grep 2016 &amp;&amp; if opkg update; then opkg upgrade openocd; exit 1; else echo 'Please connect your board to the Internet in order to upgrade tools' &gt;&amp;2; exit 1; fi || /usr/bin/run-avrdude /tmp/sketch.hex&quot;" tools.avrdude.network_cmd="{runtime.tools.arduinoOTA.path}/bin/arduinoOTA" tools.avrdude.upload.network_pattern="&quot;{network_cmd}&quot; -address {serial.port} -port 65280 -username arduino -password &quot;{network.password}&quot; -sketch &quot;{build.path}/{build.project_name}.bin&quot; -upload /sketch -b" tools.gdb.path="{runtime.tools.arm-none-eabi-gcc-7-2017q4.path}/bin/" tools.gdb.cmd="arm-none-eabi-gdb.exe" tools.gdb.cmd.windows="arm-none-eabi-gdb.exe" tools.gdb.debug.pattern="&quot;{path}/{cmd}&quot; --interpreter=mi2 -ex &quot;set pagination off&quot; -ex 'target extended-remote | {tools.openocd.path}/{tools.openocd.cmd} -s &quot;{tools.openocd.path}/share/openocd/scripts/&quot; --file &quot;{runtime.platform.path}/variants/{build.variant}/{build.openocdscript}&quot; -c &quot;gdb_port pipe&quot; -c &quot;telnet_port 0&quot;' {build.path}/{build.project_name}.elf" edbg.name="Atmel EDBG" edbg.communication="USB" edbg.protocol="" edbg.program.protocol="" edbg.program.tool="openocd" edbg.program.extra_params="" atmel_ice.name="Atmel-ICE" atmel_ice.communication="USB" atmel_ice.protocol="" atmel_ice.program.protocol="" atmel_ice.program.tool="openocd" atmel_ice.program.extra_params="" sam_ice.name="Atmel SAM-ICE" sam_ice.communication="USB" sam_ice.protocol="" sam_ice.program.protocol="" sam_ice.program.tool="openocd" sam_ice.program.extra_params="" runtime.tools.arm-none-eabi-gcc.path="C:\Users\Mark Mortimer\AppData\Local\arduino15\packages\arduino\tools\arm-none-eabi-gcc\7-2017q4" runtime.tools.arm-none-eabi-gcc-7-2017q4.path="C:\Users\Mark Mortimer\AppData\Local\arduino15\packages\arduino\tools\arm-none-eabi-gcc\7-2017q4" runtime.tools.bossac.path="C:\Users\Mark Mortimer\AppData\Local\arduino15\packages\arduino\tools\bossac\1.8.0-48-gb176eee" runtime.tools.bossac-1.7.0-arduino3.path="C:\Users\Mark Mortimer\AppData\Local\arduino15\packages\arduino\tools\bossac\1.7.0-arduino3" runtime.tools.bossac-1.8.0-48-gb176eee.path="C:\Users\Mark Mortimer\AppData\Local\arduino15\packages\arduino\tools\bossac\1.8.0-48-gb176eee" runtime.tools.openocd.path="C:\Users\Mark Mortimer\AppData\Local\arduino15\packages\arduino\tools\openocd\0.10.0-arduino7" runtime.tools.openocd-0.10.0-arduino7.path="C:\Users\Mark Mortimer\AppData\Local\arduino15\packages\arduino\tools\openocd\0.10.0-arduino7" runtime.tools.CMSIS.path="C:\Users\Mark Mortimer\AppData\Local\arduino15\packages\arduino\tools\CMSIS\4.5.0" runtime.tools.CMSIS-4.5.0.path="C:\Users\Mark Mortimer\AppData\Local\arduino15\packages\arduino\tools\CMSIS\4.5.0" runtime.tools.CMSIS-Atmel.path="C:\Users\Mark Mortimer\AppData\Local\arduino15\packages\arduino\tools\CMSIS-Atmel\1.2.0" runtime.tools.CMSIS-Atmel-1.2.0.path="C:\Users\Mark Mortimer\AppData\Local\arduino15\packages\arduino\tools\CMSIS-Atmel\1.2.0" runtime.tools.arduinoOTA.path="C:\Users\Mark Mortimer\AppData\Local\arduino15\packages\arduino\tools\arduinoOTA\1.2.1" runtime.tools.arduinoOTA-1.2.1.path="C:\Users\Mark Mortimer\AppData\Local\arduino15\packages\arduino\tools\arduinoOTA\1.2.1" runtime.tools.arduinoOTA-1.3.0.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avrdude.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avrdude-6.3.0-arduino17.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avr-gcc.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino5.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.tools-avr.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.vm.boardinfo.id="adafruit_adafruit_feather_m0" runtime.vm.boardinfo.name="adafruit_adafruit_feather_m0" runtime.vm.boardinfo.desc="Adafruit Feather M0" runtime.vm.boardinfo.src_location="C:\Users\Mark Mortimer\AppData\Local\arduino15\packages\adafruit\hardware\samd\1.5.11" ide.hint="Use installed IDE. Provides built-in hardware, reference/help and libraries." ide.location.key="Arduino16x" ide.location.ide.winreg="Arduino 1.6.x Application" ide.location.sketchbook.winreg="Arduino 1.6.x Sketchbook" ide.location.sketchbook.preferences="sketchbook.path" ide.default.revision_name="1.9.0" ide.default.version="10800" ide.default.package="arduino" ide.default.platform="avr" ide.multiplatform="true" ide.includes="Arduino.h" ide.exe_name="arduino" ide.recipe.preproc.defines.flags="-w -x c++ -E -dM" ide.platformswithoutpackage="false" ide.includes.fallback="wprogram.h" ide.extension="ino" ide.extension.fallback="pde" ide.versionGTEQ="160" ide.exe="arduino.exe" ide.builder.exe="arduinobuilder.exe" ide.builder.name="Arduino Builder" ide.hosts="atmel" ide.url="https://www.visualmicro.com/page/Download-Arduino-Or-Other-Supporting-IDEs.aspx" ide.help.reference.path="reference" ide.help.reference.path2="reference\www.arduino.cc\en\Reference" ide.help.reference.serial="reference\www.arduino.cc\en\Serial" ide.location.preferences.portable="{runtime.ide.path}\portable" ide.location.preferences.arduinoData="{runtime.sketchbook.path}\ArduinoData" ide.location.preferences="%VM_APPDATA_LOCAL%\arduino15\preferences.txt" ide.location.preferences_fallback="%VM_APPDATA_ROAMING%\arduino15\preferences.txt" ide.location.contributions="%VM_APPDATA_LOCAL%\arduino15" ide.location.contributions_fallback="%VM_APPDATA_ROAMING%\arduino15" ide.contributions.boards.allow="true" ide.contributions.boards.ignore_unless_rewrite_found="true" ide.contributions.libraries.allow="true" ide.contributions.boards.support.urls.wiki="https://github.com/arduino/Arduino/wiki/Unofficial-list-of-3rd-party-boards-support-urls" ide.create_platforms_from_boardsTXT.teensy="build.core" vm.debug="true" software="ARDUINO" ssh.user.name="root" ssh.user.default.password="arduino" ssh.host.wwwfiles.path="/www/sd" build.working_directory="{runtime.ide.path}\java\bin" ide.debug_menu.debugger_type="Debug" ide.debug_menu.debugger_type.none="Off" ide.debug_menu.none.debug.tool="no_debug" ide.debug_menu.debugger_type.universal="Serial" ide.debug_menu.universal.debug.tool="auto" ide.debug_menu.debugger_type.hwdebugger="Hardware" ide.debug_menu.hwdebugger="Debugger" ide.debug_menu.hwdebugger.custom_debugger="Manual/Custom" ide.debug_menu.hwdebugger.custom_debugger.debug.tool="dbg_external" ide.meta_custom_debugger.sentence="Provides a build that includes debug defines and will launch a custom debugger if one is provided." ide.meta_custom_debugger.paragraph="This is option is for advanced use. It is recommended that a pre-configured debugger be selected when available in this list. Usage: Optionally add a customer debugger to the project. A 'debugger_launch.json' file shares the same command syntax that is used by the VsCode debugger. Custom debuggers can be targeted at a board and/or variant and/or configuration name. IE: [variant].[configuration_name][.]debugger_launch.json" ide.meta_custom_debugger.reference.usage.url="https://github.com/Microsoft/vscode-cpptools/blob/master/launch.md#customlaunchsetupcommands" ide.meta_custom_debugger.reference.connect.url="https://docs.microsoft.com/en-us/visualstudio/debugger/create-custom-views-of-native-objects?view=vs-2019" ide.compiler_flags_no_opt="-O0" ide.debug_menu.vm_disable_optimization="Disable Optimization" ide.debug_menu.vm_disable_optimization.vm_disable_opt_default="Default Optimization" ide.debug_menu.vm_disable_optimization.vm_disable_opt_proj="No Project  Optimization" ide.debug_menu.vm_disable_opt_proj.vm_disable_opt_project="{ide.compiler_flags_no_opt}" ide.debug_menu.vm_disable_optimization.vm_disable_opt_proj_libs="No Project + Libraries Optimization" ide.debug_menu.vm_disable_opt_proj_libs.vm_disable_opt_project="{ide.compiler_flags_no_opt}" ide.debug_menu.vm_disable_opt_proj_libs.vm_disable_opt_libraries="{ide.compiler_flags_no_opt}" ide.debug_menu.vm_disable_optimization.vm_disable_opt_all="No Optimization" ide.meta_vm_disable_opt_all.sentence="Disable compiler optimization for all sources:- Project, Library and Platform." ide.meta_vm_disable_opt_all.comment="After switching between 'No Optimization' and other optimization values, please click &quot;Solution Clean&quot; or switch off (or cycle) 'vMicro&gt;Compiler&gt;Shared Cache For Cores'. NOTE: Changing optimization settings can cause build errors or result in overly large programs." ide.debug_menu.vm_disable_opt_all.vm_disable_opt_project="{ide.compiler_flags_no_opt}" ide.debug_menu.vm_disable_opt_all.vm_disable_opt_libraries="{ide.compiler_flags_no_opt}" ide.debug_menu.vm_disable_opt_all.vm_disable_opt_core="{ide.compiler_flags_no_opt}" ide.appid="arduino16x" location.sketchbook="C:\Users\Mark Mortimer\Documents\Arduino" build.core.vmresolved="C:\Users\Mark Mortimer\AppData\Local\arduino15\packages\adafruit\hardware\samd\1.5.11\cores\arduino" build.core.parentfolder.vmresolved="C:\Users\Mark Mortimer\AppData\Local\arduino15\packages\adafruit\hardware\samd\1.5.11\cores" build.core.coresparentfolder.vmresolved="C:\Users\Mark Mortimer\AppData\Local\arduino15\packages\adafruit\hardware\samd\1.5.11" build.core.path="C:\Users\Mark Mortimer\AppData\Local\arduino15\packages\adafruit\hardware\samd\1.5.11\cores\arduino" vm.core.include="arduino.h" vm.boardsource.path="C:\Users\Mark Mortimer\AppData\Local\arduino15\packages\adafruit\hardware\samd\1.5.11" runtime.platform.path="C:\Users\Mark Mortimer\AppData\Local\arduino15\packages\adafruit\hardware\samd\1.5.11" vm.platformname.name="samd" build.arch="SAMD" vm.runtime.compiler.cached_cores_path="C:\Users\Mark Mortimer\AppData\Local\Temp\VMBCore\arduino16x" vm.runtime.compiler.showwarnings="false" vm.runtime.compiler.showwarnings_core="false" vm.runtime.compiler.showwarnings_library="false" vm.runtime.upload.verbose="false" vm.runtime.upload.verify="false" runtime.vm.ide.platforms.path="c:\program files (x86)\microsoft visual studio\2019\community\common7\ide\extensions\p1hbfuhp.cmm\Micro Platforms" runtime.vm.ide.tools.openocd.path="{runtime.tools.openocd-0.9.0.path}" runtime.vm.openocd.path="{runtime.tools.openocd-0.9.0.path}" vm.runtime.build.intermediate_output_path="C:\Users\Mark Mortimer\Documents\Arduino\GPS_LoRaWAN\Debug\" vm.runtime.build.final_output_path="C:\Users\Mark Mortimer\Documents\Arduino\GPS_LoRaWAN\Debug\" compiler.always_include_sketchfolder="true" compiler.always_include_sharedprojectfolders="true" vm.runtime.compiler.auto_discover_includes="true" vm.runtime.compiler.allow_library_debugging="false" serial.port.file="COM26" serial.port="COM26" serial.port.num="26" extra.time.local="1585557075" extra.time.utc="1585517475" extra.time.dst="39600" extra.time.zone="-39600" serial.port.caption="COM26 - USB Serial Device" serial.Caption="USB Serial Device (COM26)" serial.ClassGuid="{4d36e978-e325-11ce-bfc1-08002be10318}" serial.CompatibleID.value0="USB\Class_02" serial.ConfigManagerErrorCode="0" serial.ConfigManagerUserConfig="False" serial.CreationClassName="Win32_PnPEntity" serial.Description="USB Serial Device" serial.DeviceID="USB\VID_239A&amp;PID_000B\7&amp;1CA76CA2&amp;0&amp;3" serial.HardwareID.value0="USB\VID_239A&amp;PID_000B" serial.Manufacturer="Microsoft" serial.Name="USB Serial Device (COM26)" serial.PNPClass="Ports" serial.PNPDeviceID="USB\VID_239A&amp;PID_000B\7&amp;1CA76CA2&amp;0&amp;3" serial.Present="True" serial.Service="usbser" serial.Status="OK" serial.SystemCreationClassName="Win32_ComputerSystem" serial.SystemName="SURFACEBOOK" serial.vid="0x239A" serial.pid="0x000B" serial.vidpid="239A000B" serial.vid_pid="0x239A_0x000B" serial.iserial="7&amp;1CA76CA2&amp;0&amp;3" serial.port.iserial="7&amp;1CA76CA2&amp;0&amp;3" build.project_name="GPS_LoRaWAN.ino" build.project_path="C:\Users\Mark Mortimer\Documents\Arduino\GPS_LoRaWAN" sketch_path="C:\Users\Mark Mortimer\Documents\Arduino\GPS_LoRaWAN" ProjectDir="C:\Users\Mark Mortimer\Documents\Arduino\GPS_LoRaWAN\" build.path="C:\Users\Mark Mortimer\AppData\Local\Temp\VMBuilds\GPS_LoRaWAN\adafruit_adafruit_feather_m0\Debug" debug.tool="auto" vm.runtime.compile.skip_library_file_if_exists_in_project="false" vm.runtime.compiler.auto_discover_includes_cache="true" build.vm.build.vmdebug="1" build.vm.build.isgdb="0" build.vm.build.optimised="1" vm.last.buildpath="C:\Users\Mark Mortimer\AppData\Local\Temp\VMBuilds\GPS_LoRaWAN\adafruit_adafruit_feather_m0\Debug" build.architecture="7-2017q4" vmresolved.compiler.path="C:\Users\Mark Mortimer\AppData\Local\arduino15\packages\arduino\tools\arm-none-eabi-gcc\7-2017q4\bin\" vmresolved.tools.path="C:\Users\Mark Mortimer\AppData\Local\arduino15\packages\arduino\tools\arm-none-eabi-gcc\7-2017q4" build.variant.vmresolved.name="feather_m0" build.variant.vmresolved.full_path="C:\Users\Mark Mortimer\AppData\Local\arduino15\packages\adafruit\hardware\samd\1.5.11\variants\feather_m0" />
    </Platform>
    <Debug DebugEnabled="1" EnableBreak="1" InBreakLiveView="1" PerfStats="1" IsGdb="0" RemotePortSpeedWrittenToDebugSource="115200" />
    <VCCodeModel>
      <VCCodeMacros />
    </VCCodeModel>
    <BreakPoints>
      <BreakPoint Index="1" Name="GPS_LoRaWAN.ino, line 63" Id="7df7c18e-f37d-4334-8793-dbf722620f11" Enabled="1" Message="Loop" MessageTextType="0" PreProcessedMessage="Loop" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\mark mortimer\documents\arduino\gps_lorawan\gps_lorawan.ino" FileLine="63" FileColumn="1" FunctionName="" FunctionLineOffset="1" FunctionColumnOffset="1" HitCountTarget="1000" HitCountType="2" Language="C++" LocationType="3" Tag="&lt;vmbp Id='7df7c18e-f37d-4334-8793-dbf722620f11'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>56	    GPS.begin(9600);
57	    GPS.sendCommand(PMTK_SET_NMEA_OUTPUT_RMCGGA);
58	    GPS.sendCommand(PMTK_SET_NMEA_UPDATE_1HZ);
59	    GPS.sendCommand(PGCMD_ANTENNA);
60	    delay(1000);
61	}
62	
--&gt;63	void loop() {
64	    char c = GPS.read();
65	    if (GPS.newNMEAreceived()) {
66	        if (!GPS.parse(GPS.lastNMEA()))
67	            return;
68	    }
69	
70	    if (millis() - timer &gt; timeBetweenReads) {
71	        Serial.print("\nTime: ");
72	        Serial.print(GPS.hour, DEC); Serial.print(':');
</Source>
      </BreakPoint>
      <BreakPoint Index="2" Name="GPS_LoRaWAN.ino, line 64" Id="5bfd0009-4f43-4614-94c6-518a41cf0af5" Enabled="1" Message="GPS Read {c}." MessageTextType="0" PreProcessedMessage="GPS Read {0}." Condition="" ConditionType="1" CurrentHits="0" File="c:\users\mark mortimer\documents\arduino\gps_lorawan\gps_lorawan.ino" FileLine="64" FileColumn="1" FunctionName="loop()" FunctionLineOffset="2" FunctionColumnOffset="1" HitCountTarget="250" HitCountType="2" Language="C++" LocationType="3" Tag="&lt;vmbp Id='5bfd0009-4f43-4614-94c6-518a41cf0af5'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>57	    GPS.sendCommand(PMTK_SET_NMEA_OUTPUT_RMCGGA);
58	    GPS.sendCommand(PMTK_SET_NMEA_UPDATE_1HZ);
59	    GPS.sendCommand(PGCMD_ANTENNA);
60	    delay(1000);
61	}
62	
63	void loop() {
--&gt;64	    char c = GPS.read();
65	    if (GPS.newNMEAreceived()) {
66	        if (!GPS.parse(GPS.lastNMEA()))
67	            return;
68	    }
69	
70	    if (millis() - timer &gt; timeBetweenReads) {
71	        Serial.print("\nTime: ");
72	        Serial.print(GPS.hour, DEC); Serial.print(':');
73	        Serial.print(GPS.minute, DEC); Serial.print(':');
</Source>
        <MessageVariables>
          <MessageVariable Name="c" Index="1" />
        </MessageVariables>
      </BreakPoint>
    </BreakPoints>
  </Program>
</VisualMicro>